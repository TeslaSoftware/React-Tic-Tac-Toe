{"version":3,"sources":["index.js"],"names":["Square","props","classes","highlight","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","i","_this","this","isWinningSquare","winningSquares","includes","key","squares","board","currentRow","j","push","renderSquare","React","Component","Game","_this2","Object","F_Web_Development_React_Tutorial_Tic_Tac_Toe_Game_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","F_Web_Development_React_Tutorial_Tic_Tac_Toe_Game_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","F_Web_Development_React_Tutorial_Tic_Tac_Toe_Game_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","xIsNext","stepNumber","reversedList","slice","length","calculateWinner","row","Math","floor","col","setState","concat","step","console","log","lines","_lines$i","F_Web_Development_React_Tutorial_Tic_Tac_Toe_Game_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","status","_this3","current","winner","getWinningSquares","moves","map","move","desc","jumpTo","reverse","handleClick","id","reverseList","reversed","_lines$i2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ced592f.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst BOARD_ROWS = 3;\r\nconst BOARD_COLS = 3;\r\n\r\nfunction Square(props){\r\n  let classes = \"square\";\r\n   if(props.highlight){\r\n    classes += \" winning-square\";\r\n   }\r\n    return (\r\n        <button \r\n          className={classes} \r\n          onClick={props.onClick}\r\n        >\r\n          {props.value}\r\n        </button>\r\n    );\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n      let isWinningSquare = false;\r\n      if(this.props.winningSquares){\r\n        isWinningSquare = (this.props.winningSquares.includes(i));\r\n      } \r\n      return <Square key={i}\r\n      value={this.props.squares[i]}\r\n      onClick ={() => this.props.onClick(i)}\r\n      highlight ={isWinningSquare}\r\n      />;\r\n    }\r\n  \r\n    render() {\r\n      let board = [];\r\n      \r\n      for(let i = 0; i < BOARD_ROWS; i++){\r\n        let currentRow = [];\r\n        for(let j = 0; j < BOARD_COLS; j++){\r\n          currentRow.push(this.renderSquare(i*BOARD_ROWS + j));\r\n        }\r\n        board.push(<div key={i} className=\"board-row\">{currentRow}</div>);\r\n      }\r\n\r\n\r\n      return (\r\n        <div>\r\n          {board}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null),\r\n        }],\r\n        xIsNext: true,\r\n        stepNumber: 0,\r\n        reversedList: false,\r\n      };\r\n    }\r\n\r\n    handleClick(i){\r\n      const history = this.state.history.slice(0, this.state.stepNumber +1);\r\n      const current = history[history.length -1];\r\n      const squares = current.squares.slice();\r\n      if(calculateWinner(squares) || squares[i]){\r\n        return;\r\n      }\r\n      let row = Math.floor((i) / 3) +1;\r\n      let col = (i%3) +1;\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({\r\n        history: history.concat([{\r\n          squares: squares,\r\n          row: row,\r\n          col: col,\r\n        }]),\r\n        xIsNext: !this.state.xIsNext,\r\n        stepNumber: history.length,\r\n      });\r\n    }\r\n\r\n    jumpTo(step){\r\n      console.log(\"jumping to state \" + step);\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      });\r\n    }\r\n\r\n    reverseList(){\r\n      this.setState({\r\n        reversedList: !this.state.reversedList\r\n      });\r\n    }\r\n\r\n    getWinningSquares(squares){\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n      for(let i = 0; i < lines.length;  i++){\r\n        const [a, b, c] = lines[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n          return lines[i];\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n\r\n      const winningSquares = this.getWinningSquares(current.squares);\r\n\r\n     \r\n      const moves = history.map((step, move) => {\r\n        let desc = move ? \r\n          'Go to move #' + move + \" . Row: \" + step.row + \", Col: \" + step.col : \r\n          'Go to game start';\r\n          if(this.state.stepNumber === move) desc = <b>{desc} </b>;\r\n          return (\r\n            <li key={move}>\r\n              <button \r\n                onClick={() => this.jumpTo(move)}\r\n                > \r\n                {desc}\r\n                \r\n                </button>\r\n            </li>\r\n          );\r\n      })\r\n\r\n      if(this.state.reversedList){\r\n        moves.reverse();\r\n      }\r\n\r\n      let status;\r\n      if(winner){\r\n        status = 'Winner: ' + winner;\r\n      }\r\n      else if(this.state.stepNumber === 9){\r\n        status = \"It's a draw!\"\r\n      }\r\n      else{\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n              squares={current.squares}\r\n              onClick={(i) => this.handleClick(i)}\r\n              winningSquares = {winningSquares}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <button id=\"reverse-order\" onClick={() => this.reverseList()}>Reverse Order</button>\r\n            <ol reversed={this.state.reversedList}>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n\r\n  function calculateWinner(squares){\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for(let i =0; i < lines.length;  i++){\r\n      const [a, b, c] = lines[i];\r\n      if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }"],"sourceRoot":""}